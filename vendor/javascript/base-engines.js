// base-engines@0.2.1 downloaded from https://ga.jspm.io/npm:base-engines@0.2.1/index.js

import e from"debug";import n from"lazy-cache";import i from"engine-cache";import t from"define-property";import r from"is-valid-app";var s={};var g=n(null);var o=null;require=g;i;t;r;require=o;g.arrayify=function(e){return e?Array.isArray(e)?e:[e]:[]};g.isString=function(e){return e&&"string"===typeof e};g.formatExt=function formatExt(e){if("string"!==typeof e)throw new Error("expected a string");return"."!==e.charAt(0)?"."+e:e};s=g;var a=s;var f={};var h=e("base:engines");var u=a;f=function(e){return function baseEngines(e){if(u.isValid(e,"base-engines",["app","collection","views","list"])){"undefined"===typeof this._&&u.define(this,"_",{});this.engines=this.engines||{};this._.engines=new u.Engines(this.engines);this._.helpers={async:{},sync:{}};this.define("engine",(function(e,n,i){if(1===arguments.length&&"string"===typeof e)return this.getEngine(e);if(!Array.isArray(e)&&"string"!==typeof e)throw new TypeError("expected engine ext to be a string or array.");if("function"===i)return this.engine(e,i,n);u.arrayify(e).forEach(function(e){this.setEngine(e,n,i)}.bind(this));return this}));this.define("setEngine",(function(e,n,i){h('registering engine "%s"',e);i=i||{};e=u.formatExt(e);true===i.default&&(this._.engines.defaultEngine=e);this._.engines.setEngine(e,n,i);return this}));this.define("getEngine",(function(e,n){h('getting engine "%s"',e);u.isString(e)||(e=this.options["view engine"]||this.options.viewEngine||this.options.engine);if(u.isString(e)){e=u.formatExt(e);var i=this._.engines.getEngine(e);return!i&&this.options.engine&&false!==n?this.getEngine(this.options.engine,false):i}}));return baseEngines}}};var p=f;export default p;

