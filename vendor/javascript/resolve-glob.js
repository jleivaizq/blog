// resolve-glob@1.0.0 downloaded from https://ga.jspm.io/npm:resolve-glob@1.0.0/index.js

import r from"path";import e from"extend-shallow";import o from"is-valid-glob";import t from"resolve-dir";import n from"relative";import l from"matched";import a from"process";var i={};var c=a;var v=r;var s=e;var f=o;var u=t;var p=n;var y=l;i=function(r,e,o){if("function"===typeof e){o=e;e={}}if("function"!==typeof o)throw new TypeError("expected callback to be a function");if(f(r)){var t=createOptions(e);var n=true===t.nonull;delete t.nonull;y(r,t,(function(e,l){e?o(e):l.length||!n?o(null,resolveFiles(l,t)):o(null,arrayify(r))}))}else o(new TypeError("expected glob to be a string or array"))};i.sync=function(r,e){if(!f(r))throw new TypeError("expected glob to be a string or array");var o=createOptions(e);var t=true===o.nonull;delete o.nonull;var n=y.sync(r,o);return!n.length&&t?arrayify(r):resolveFiles(n,o)};function arrayify(r){return r?Array.isArray(r)?r:[r]:[]}function createOptions(r){var e=s({cwd:c.cwd()},r);e.cwd=v.resolve(resolve(e.cwd));return e}function resolveFiles(r,e){var o=r.length,t=-1;while(++t<o)r[t]=resolveFile(r[t],e);return r}function resolveFile(r,e){r=v.resolve(e.cwd,r);e.relative&&(r=p(c.cwd(),r));return r}function resolve(r){return v.resolve(u(r))}var d=i;const m=i.sync;export default d;export{m as sync};

