// repo-utils@0.3.7 downloaded from https://ga.jspm.io/npm:repo-utils@0.3.7/index.js

import r from"url";import t from"util";import e from"lazy-cache";import i from"extend-shallow";import o from"get-value";import n from"git-config-path";import a from"is-absolute";import s from"kind-of";import p from"mixin-deep";import u from"omit-empty";import f from"parse-author";import m from"parse-git-config";import g from"parse-github-url";import h from"project-name";import c from"process";var l={};var v=e(null);var b=null;require=v;i;o;n;a;s;p;u;f;m;g;h;require=b;v.get=function(r,t){return v.getValue(r||{},t)};v.isObject=function(r){return"object"===v.typeOf(r)};v.isString=function(r){return r&&"string"===typeof r};l=v;var y=l;var w={};var d=c;var U=r;var S=t;var j=y;var E={};var x=w=w;x.name=function(r){"."!==r&&""!==r||(r=d.cwd());if(j.isObject(r)||j.isString(r)&&!j.isAbsolute(r)){var t=x.repository.apply(x,arguments);return t.split("/").pop()}return j.project(r)};x.repository=function(r,t){if(j.isObject(r)){var e=r;r=e.owner;t=e.name||t;if(!j.isString(r)){var i=e.repository||e.repo||e.pathname;if(j.isString(i)){var o=x.parseUrl(i);r=o.owner;t=t||o.name}}}if(/\W/.test(r)){var n=x.parseUrl(r);if(j.isString(n.repository)){r=n.owner;t=n.name}}if(!j.isString(r))throw new TypeError("expected owner to be a string");return r+(t?"/"+t:"")};x.homepage=function(r,t){t=t||{};if(j.isString(r)){if(j.isString(t)){r+="/"+t;t={}}t.repository=r}j.isObject(r)&&(t=j.merge({},r,t));var e=j.omitEmpty(t);e.repository=e.repository||e.pathname;if(!j.isString(e.repository))throw new TypeError('expected a repository string in the form of "owner/repo"');j.isString(e.hostname)||(e.hostname="github.com");j.isString(e.protocol)||(e.protocol="https:");if(/[:.#]/.test(e.repository)){var i=x.parseUrl(e.repository,e);e=j.merge({},i,e);e.repository=i.repository}e.pathname=e.repository;delete e.hash;return U.format(e)};x.issues=function(r,t){return x.homepage(r,t)+"/issues"};x.bugs=function(r,t){return x.issues(r,t)};x.https=function(r,t,e){if(j.isString(t)){e=t;t={}}var i=x.homepage(r,t);e=x.isMaster(e)?"":"/blob/"+e;return i+e};x.travis=function(r,t){t=x.isMaster(t)?"":"?branch="+t;return"https://travis-ci.org/"+r+t};x.file=function(r,t,e){if(!j.isString(e)){e=t;t="master"}var i="https://github.com/%s/blob/%s/%s";return S.format(i,x.repository(r),t,e)};x.raw=function(r,t,e){if(!j.isString(e)){e=t;t="master"}var i="https://raw.githubusercontent.com/%s/%s/%s";return S.format(i,x.repository(r),t,e)};x.isGithubUrl=function(r){return["api.github.com","gist.github.com","github.com","github.io","raw.githubusercontent.com"].indexOf(U.parse(r).host)>-1};x.parseUrl=function(r,t){if(!j.isString(r))throw new TypeError("expected repository URL to be a string");var e={protocol:"https:",slashes:true,hostname:"github.com"};t=j.omitEmpty(j.extend({},t));/:\/\//.test(r)||(r=(t.host||"https://github.com/")+r);var i=j.omitEmpty(U.parse(r));var o=j.merge(e,t,i);o.pathname=r;var n=j.omitEmpty(j.parseGithubUrl(r));return j.merge({},o,n)};x.expandUrl=function(r,t){var e=x.parseUrl(r);r=e.repository;var i="https://github.com";var o=e.branch;var n="https://raw.githubusercontent.com";var a="github.com"!==e.host?e.host+"/api/v3":"api.github.com";var s=e;s.host_api=a;s.host_raw=n;s.api="https://"+a+"/repos/"+r;s.tarball=s.api+"/tarball/"+o;s.clone=i+"/"+r;s.zip=s.clone+"/archive/"+o+".zip";s.https=x.https(e,o);s.travis=x.travis(r,o);if(j.isString(t)){s.file=x.file(r,o,t);s.raw=x.raw(r,o,t)}s.name=s.name&&s.name.split("%20").join(" ");return s};x.gitConfigPath=function(r){return j.gitConfigPath(r)};x.gitConfig=function(r){var t=d.cwd();if(E[t])return E[t];r=r||{};"undefined"===typeof r.type&&(r.type="global");var e=x.gitConfigPath(r.type);if(j.isString(e)){var i=j.parseGitConfig.sync({path:e});i&&i.user&&j.merge(i,j.parseGitConfig.keys(i));E[t]=i;return i}};x.gitUser=function(r){return j.get(x.gitConfig(r),"user")};x.gitUserName=function(r){return j.get(x.gitUser(r),"name")};x.gitUserEmail=function(r){return j.get(x.gitUser(r),"email")};x.owner=function(r){var t;j.isString(r)&&(r=x.parseUrl(r));if(j.isObject(r)){t=j.get(r,"owner");if("undefined"===typeof t&&r.repository){var e=r.repository;j.isObject(e)&&(e=e.url);r=x.parseUrl(e);t=j.get(r,"owner")}if("undefined"===typeof t&&r.url){r=x.parseUrl(r.url);t=j.get(r,"owner")}if("undefined"===typeof t&&r.author){var i=x.parseAuthor(r.author);r=x.parseUrl(i.url);t=j.get(r,"owner")}}return t};x.person=function(r){var t=r;j.isString(r)&&(t=j.parseAuthor(r));j.isObject(t)&&(t=j.omitEmpty(t));return t};x.author=function(r){if(!j.isObject(r))throw new TypeError("expected an object");return x.person(r.author)};x.authorName=function(r,t){return j.get(x.author(r,t),"name")};x.authorUrl=function(r,t){return j.get(x.author(r,t),"url")};x.authorEmail=function(r,t){return j.get(x.author(r,t),"email")};x.authorUsername=function(r,t){return j.get(x.author(r,t),"username")};x.username=function(r,t){if(!j.isObject(r))throw new TypeError("expected an object");var e=x.authorUsername(r);if(!j.isString(e)){var i=x.authorUrl(r,t);/github\.com/.test(i)&&(e=j.get(j.parseGithubUrl(i),"owner"))}j.isString(e)||(e=x.gitUserName(t));if(!j.isString(e)){var o=r.repository||r.homepage;e=j.get(j.parseGithubUrl(o),"owner")}return e};x.isMaster=function(r){return"undefined"===typeof r||"master"===r};x.parseAuthor=j.parseAuthor;var O=w;export default O;

