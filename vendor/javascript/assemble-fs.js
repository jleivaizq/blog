// assemble-fs@0.6.0 downloaded from https://ga.jspm.io/npm:assemble-fs@0.6.0/index.js

import e from"lazy-cache";import i from"assemble-handle";import t from"extend-shallow";import n from"is-valid-app";import r from"stream-combiner";import o from"through2";import s from"vinyl-fs";var l={};var a=e(null);var p=null;require=a;i;t;n;r;o;s;require=p;l=a;var f=l;var c={};var u=f;c=function(){return function(){if(this.isApp){plugin.call(this,this);return function(){this.isCollection&&plugin.call(this,this)}}}};function plugin(e){if(u.isValidApp(e,"assemble-fs",["app","views","collection"])){if("function"===typeof e.handler&&"function"!==typeof e.onStream){e.handler("onStream");e.handler("preWrite");e.handler("postWrite");e.handler("onLoad")}e.mixin("copy",(function(e,i,t){var n=u.extend({allowEmpty:true},t);return u.vfs.src(e,n).pipe(u.vfs.dest(i,n))}));e.mixin("src",(function(e,i){var t=u.extend({allowEmpty:true},i);return u.vfs.src(e,t).pipe(toCollection(this,t)).pipe(u.handle(this,"onLoad")).pipe(u.handle(this,"onStream"))}));e.mixin("symlink",(function(){return u.vfs.symlink.apply(u.vfs,arguments)}));e.mixin("dest",(function(i){if(!i)throw new TypeError("expected dest to be a string or function.");var t=u.combine([u.handle(this,"preWrite"),u.vfs.dest.apply(u.vfs,arguments),u.handle(this,"postWrite")]);t.on("end",(function(){t.emit("finish");e.emit("end")}));return t}))}}function toCollection(e,i){var t=u.extend({collection:"streamFiles"},i);var n=t.collection;var r,o;e.isApp&&(r=e[n]||e.create(n,i));var s=u.through.obj((function(t,n,s){if(t.isNull())s(null,t);else{t.options=u.extend({onLoad:false},t.options);if(e.isApp)o=r.addView(t.path,t);else if(e.isCollection||e.isViews)o=e.addView(t.path,t);else{if(!e.isList)return s(new Error("assemble-fs expects an instance, collection or view"));o=e.setItem(t.path,t)}o.options=u.extend({},i,o.options);s(null,o)}}));e.stream=s;return s}var m=c;export default m;

