// gulp-sourcemaps@1.6.0 downloaded from https://ga.jspm.io/npm:gulp-sourcemaps@1.6.0/index.js

import e from"through2";import t from"graceful-fs";import o from"path";import r from"vinyl";import n from"convert-source-map";import i from"strip-bom";import s from"buffer";var u={};var a=s.Buffer;var c=e;var f=t;var p=o;var l=r;var v=n;var m=i;var d="gulp-sourcemap";var h=/^(https?|webpack(-[^:]+)?):\/\//;u.init=function init(e){function sourceMapInit(t,o,r){if(t.isNull()||t.sourceMap){this.push(t);return r()}if(t.isStream())return r(new Error(d+"-init: Streaming not supported"));var n=t.contents.toString();var i;if(e&&e.loadMaps){var s="";i=v.fromSource(n);if(i){i=i.toObject();s=p.dirname(t.path);n=v.removeComments(n)}else{var u=v.mapFileCommentRegex.exec(n);var c;if(u){c=p.resolve(p.dirname(t.path),u[1]||u[2]);n=v.removeMapFileComments(n)}else c=t.path+".map";s=p.dirname(c);try{i=JSON.parse(m(f.readFileSync(c,"utf8")))}catch(e){}}if(i){i.sourcesContent=i.sourcesContent||[];i.sources.forEach((function(o,r){if(o.match(h))i.sourcesContent[r]=i.sourcesContent[r]||null;else{var u=p.resolve(s,o);i.sources[r]=unixStylePath(p.relative(t.base,u));if(!i.sourcesContent[r]){var a=null;if(i.sourceRoot){if(i.sourceRoot.match(h)){i.sourcesContent[r]=null;return}u=p.resolve(s,i.sourceRoot,o)}if(u===t.path)a=n;else try{e.debug&&console.log(d+'-init: No source content for "'+o+'". Loading from file.');a=m(f.readFileSync(u,"utf8"))}catch(t){e.debug&&console.warn(d+"-init: source file not found: "+u)}i.sourcesContent[r]=a}}}));t.contents=new a(n,"utf8")}}i||(i={version:3,names:[],mappings:"",sources:[unixStylePath(t.relative)],sourcesContent:[n]});i.file=unixStylePath(t.relative);t.sourceMap=i;this.push(t);r()}return c.obj(sourceMapInit)};u.write=function write(e,t){if(void 0===t&&"[object Object]"===Object.prototype.toString.call(e)){t=e;e=void 0}t=t||{};void 0===t.includeContent&&(t.includeContent=true);void 0===t.addComment&&(t.addComment=true);function sourceMapWrite(o,r,n){if(o.isNull()||!o.sourceMap){this.push(o);return n()}if(o.isStream())return n(new Error(d+"-write: Streaming not supported"));var i=o.sourceMap;i.file=unixStylePath(o.relative);i.sources=i.sources.map((function(e){return unixStylePath(e)}));"function"===typeof t.sourceRoot?i.sourceRoot=t.sourceRoot(o):i.sourceRoot=t.sourceRoot;if(t.includeContent){i.sourcesContent=i.sourcesContent||[];for(var s=0;s<o.sourceMap.sources.length;s++)if(!i.sourcesContent[s]){var u=p.resolve(i.sourceRoot||o.base,i.sources[s]);try{t.debug&&console.log(d+'-write: No source content for "'+i.sources[s]+'". Loading from file.');i.sourcesContent[s]=m(f.readFileSync(u,"utf8"))}catch(e){t.debug&&console.warn(d+"-write: source file not found: "+u)}}void 0===i.sourceRoot?i.sourceRoot="/source/":null===i.sourceRoot&&(i.sourceRoot=void 0)}else delete i.sourcesContent;var c=o.relative.split(".").pop();var v;switch(c){case"css":v=function(e){return"\n/*# sourceMappingURL="+e+" */\n"};break;case"js":v=function(e){return"\n//# sourceMappingURL="+e+"\n"};break;default:v=function(e){return""}}var h,g;if(e){var b=p.join(o.base,e,o.relative)+".map";var C=new l({cwd:o.cwd,base:o.base,path:b,contents:new a(JSON.stringify(i)),stat:{isFile:function(){return true},isDirectory:function(){return false},isBlockDevice:function(){return false},isCharacterDevice:function(){return false},isSymbolicLink:function(){return false},isFIFO:function(){return false},isSocket:function(){return false}}});this.push(C);var R=p.relative(p.dirname(o.path),b);if(t.sourceMappingURLPrefix){var S="";S="function"===typeof t.sourceMappingURLPrefix?t.sourceMappingURLPrefix(o):t.sourceMappingURLPrefix;R=S+p.join("/",R)}h=v(unixStylePath(R));t.sourceMappingURL&&"function"===typeof t.sourceMappingURL&&(h=v(t.sourceMappingURL(o)))}else{var y=new a(JSON.stringify(i)).toString("base64");h=v("data:application/json;base64,"+y)}t.addComment&&(o.contents=a.concat([o.contents,new a(h)]));this.push(o);n()}return c.obj(sourceMapWrite)};function unixStylePath(e){return e.split(p.sep).join("/")}const g=u.init,b=u.write;export default u;export{g as init,b as write};

