// option-cache@3.5.0 downloaded from https://ga.jspm.io/npm:option-cache@3.5.0/index.js

import t from"component-emitter";import i from"lazy-cache";import r from"arr-flatten";import e from"collection-visit";import o from"get-value";import n from"has-value";import s from"kind-of";import a from"set-value";import f from"to-object-path";var h={};var p=i(null);var u=null;require=p;r;e;o;n;s;a;f;require=u;p.mergeArray=function(t,i,r){var e=t.length;var o=-1;while(++o<e){var n=t[o];var s=Object.keys(n);for(var a=0;a<s.length;a++){var f=s[a];i.call(r,n[f],f,n)}}};h=p;var l=h;var c={};var v=t;var y=l;function Options(t){if(!(this instanceof Options))return new Options(t);this.defaults=this.defaults||{};this.options=this.options||{};t&&this.option(t)}Options.prototype=v({constructor:Options,option:function(t,i){if("undefined"!==typeof t){Array.isArray(t)&&(arguments.length>1?t=y.toPath(t):"string"===typeof t[0]&&(t=y.toPath(arguments)));var r=y.typeOf(t);if("string"===r){if(1===arguments.length)return this.either(t,y.get(this.defaults,t));y.set(this.options,t,i);this.emit("option",t,i);return this}if("object"!==r&&"array"!==r){var e="expected option to be a string, object or array";throw new TypeError(e)}return this.mergeOptions.apply(this,arguments)}},default:function(t,i){switch(y.typeOf(t)){case"object":this.visit("default",t);return this;case"string":if("undefined"!==typeof i){y.set(this.defaults,t,i);return this}return y.get(this.defaults,t);default:throw new TypeError("expected a string or object")}},either:function(t,i,r){var e=y.get(this.options,t);return"undefined"===typeof e||r&&y.typeOf(e)!==r?i:e},fillin:function(t,i,r){if("object"===y.typeOf(t)){var e=t;var o=Object.keys(e);for(var n=0;n<o.length;n++){var s=o[n];this.fillin(s,e[s],r)}}else{var a=this.option(t);("undefined"===typeof a||"string"===typeof r&&y.typeOf(a)!==r)&&this.option(t,i)}return this},mergeOptions:function(t){var i=[].slice.call(arguments);Array.isArray(t)&&(i=y.flatten(i));y.mergeArray(i,(function(t,i){this.emit("option",i,t);y.set(this.options,i,t)}),this);return this},hasOption:function(t){var i=y.toPath(arguments);return-1===i.indexOf(".")?this.options.hasOwnProperty(i):y.has(this.options,i)},enable:function(t){this.option(t,true);return this},disable:function(t){this.option(t,false);return this},enabled:function(t){var i=y.toPath(arguments);return Boolean(this.option(i))},disabled:function(t){var i=y.toPath(arguments);return!Boolean(this.option(i))},isTrue:function(t){var i=y.toPath(arguments);return true===this.option(i)},isFalse:function(t){var i=y.toPath(arguments);return false===this.option(i)},isBoolean:function(t){var i=y.toPath(arguments);return"boolean"===typeof this.option(i)},visit:function(t,i){y.visit(this,t,i);return this}});c=Options;var m=c;export default m;

