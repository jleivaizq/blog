// group-array@0.3.4 downloaded from https://ga.jspm.io/npm:group-array@0.3.4/index.js

import r from"split-string";import e from"arr-flatten";import a from"union-value";import t from"for-own";import o from"kind-of";import n from"get-value";var u={};var i=r;var c=e;var f=a;var p=t;var s=o;var l=n;function groupFn(r,e){if(null==r)return[];if(!Array.isArray(r))throw new TypeError("group-array expects an array.");if(1===arguments.length)return r;var a=c([].slice.call(arguments,1));var t=groupBy(r,a[0]);for(var o=1;o<a.length;o++)toGroup(t,a[o]);return t}function groupBy(r,e,a){var t={};for(var o=0;o<r.length;o++){var n=r[o];var u;u="function"===typeof e?e.call(t,n,a):l(n,e);switch(s(u)){case"undefined":break;case"string":case"number":case"boolean":f(t,escape(String(u)),n);break;case"object":case"array":eachValue(t,n,u);break;case"function":throw new Error("invalid argument type: "+a)}}return t}function eachValue(r,e,a){Array.isArray(a)?a.forEach((function(a){f(r,escape(a),e)})):p(a,(function(a,t){f(r,escape(t),e)}))}function toGroup(r,e){p(r,(function(a,t){Array.isArray(a)?r[t]=groupBy(a,e,t):r[t]=toGroup(a,e,t)}));return r}function escape(r){var e={strict:false,keepEscaping:true,keepDoubleQuotes:true,keepSingleQuotes:true};try{return i(r,e).join("\\.")}catch(e){return r}}u=groupFn;var v=u;export default v;

